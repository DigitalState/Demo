---
- block:
      - name: Configure cases namespace environment variable
        lineinfile:
            create: yes
            path: '/srv/cases/{{ cases_env_file }}'
            regexp: '^COMPOSE_PROJECT_NAME='
            line: 'COMPOSE_PROJECT_NAME={{ cases_compose_project_name }}'
      - name: Configure cases network environment variable
        lineinfile:
            create: yes
            path: '/srv/cases/{{ cases_env_file }}'
            regexp: '^NETWORK='
            line: 'NETWORK={{ cases_network }}'
      - name: Configure proxy host environment variable
        lineinfile:
            create: yes
            path: '/srv/cases/{{ cases_env_file }}'
            regexp: '^PROXY_HOST='
            line: 'PROXY_HOST={{ cases_proxy_host }}'
      - name: Configure nginx virtual host environment variable
        lineinfile:
            create: yes
            path: '/srv/cases/{{ cases_env_file }}'
            regexp: '^NGINX_VIRTUAL_HOST='
            line: 'NGINX_VIRTUAL_HOST={{ cases_nginx_virtual_host }}'
      - name: Configure adminer virtual host environment variable
        lineinfile:
            create: yes
            path: '/srv/cases/{{ cases_env_file }}'
            regexp: '^ADMINER_VIRTUAL_HOST='
            line: 'ADMINER_VIRTUAL_HOST={{ cases_adminer_virtual_host }}'
      - name: Configure discovery host environment variable
        lineinfile:
            create: yes
            path: '/srv/cases/{{ cases_env_file }}'
            regexp: '^DISCOVERY_HOST='
            line: 'DISCOVERY_HOST={{ cases_discovery_host }}'
      - name: Configure directory environment variable
        lineinfile:
            create: yes
            path: '/srv/cases/{{ cases_env_file }}'
            regexp: '^DIRECTORY='
            line: 'DIRECTORY={{ cases_directory }}'
      - name: Configure database host environment variable
        lineinfile:
            create: yes
            path: '/srv/cases/{{ cases_env_file }}'
            regexp: '^DATABASE_HOST='
            line: 'DATABASE_HOST={{ cases_database_host }}'
      - name: Configure database port environment variable
        lineinfile:
            create: yes
            path: '/srv/cases/{{ cases_env_file }}'
            regexp: '^DATABASE_PORT='
            line: 'DATABASE_PORT={{ cases_database_port }}'
      - name: Configure database name environment variable
        lineinfile:
            create: yes
            path: '/srv/cases/{{ cases_env_file }}'
            regexp: '^DATABASE_NAME='
            line: 'DATABASE_NAME={{ cases_database_name }}'
      - name: Configure database username environment variable
        lineinfile:
            create: yes
            path: '/srv/cases/{{ cases_env_file }}'
            regexp: '^DATABASE_USERNAME='
            line: 'DATABASE_USERNAME={{ cases_database_username }}'
      - name: Configure database password environment variable
        lineinfile:
            create: yes
            path: '/srv/cases/{{ cases_env_file }}'
            regexp: '^DATABASE_PASSWORD='
            line: 'DATABASE_PASSWORD={{ cases_database_password }}'
  when: cases_env_file is not none

- name: Up cases container
  docker_service:
      project_src: /srv/cases
      files:
          - docker-compose.yml
          - 'docker-compose.{{ env }}.yml'
      state: present
  environment:
      COMPOSE_PROJECT_NAME: '{{ cases_compose_project_name }}'
      NETWORK: '{{ cases_network }}'
      PROXY_HOST: '{{ cases_proxy_host }}'
      NGINX_VIRTUAL_HOST: '{{ cases_nginx_virtual_host }}'
      ADMINER_VIRTUAL_HOST: '{{ cases_adminer_virtual_host }}'
      DIRECTORY: '{{ cases_directory }}'
      DATABASE_HOST: '{{ cases_database_host }}'
      DATABASE_PORT: '{{ cases_database_port }}'
      DATABASE_NAME: '{{ cases_database_name }}'
      DATABASE_USERNAME: '{{ cases_database_username }}'
      DATABASE_PASSWORD: '{{ cases_database_password }}'

- name: Waiting for cases container to finalize installation
  shell:
      cmd: docker-compose exec -T php pidof php-fpm | cat
      chdir: /srv/cases
  register: output
  until: output.stdout|match('^[0-9]+(\s[0-9]+)*$')
  retries: 60
  delay: 10
