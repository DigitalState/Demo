---
- name: Backup cases database migration file
  copy:
      src: '/srv/cases/src/AppBundle/Resources/migrations/{{ item.key|replace(".", "_") }}.yml'
      remote_src: yes
      dest: '/srv/cases/src/AppBundle/Resources/migrations/_{{ item.key|replace(".", "_") }}.yml'
  with_dict: '{{ cases_database_migration_data }}'
  when: cases_database_migration_data is not none
  no_log: yes

- name: Create custom cases database migration file
  copy:
      dest: '/srv/cases/src/AppBundle/Resources/migrations/{{ item.key|replace(".", "_") }}.yml'
      content: '{{ item.value|to_nice_yaml }}'
  with_dict: '{{ cases_database_migration_data }}'
  when: cases_database_migration_data is not none
  no_log: yes

- name: Load cases database migration
  shell:
      cmd: 'docker-compose exec -T php php bin/console doctrine:migrations:migrate {{ "" if cases_database_migration_version is none else cases_database_migration_version|replace(".", "_") }} --no-interaction | cat'
      chdir: /srv/cases

# The restore backup task below runs before docker-compose above finishes executing. Look into fixing this.
- name: Pause while cases database migration loads
  pause:
      seconds: 15

- name: Delete custom cases database migration file
  file:
      path: '/srv/cases/src/AppBundle/Resources/migrations/{{ item.key|replace(".", "_") }}.yml'
      state: absent
  with_dict: '{{ cases_database_migration_data }}'
  when: cases_database_migration_data is not none
  no_log: yes

- name: Restore cases database migration file
  copy:
      src: '/srv/cases/src/AppBundle/Resources/migrations/_{{ item.key|replace(".", "_") }}.yml'
      remote_src: yes
      dest: '/srv/cases/src/AppBundle/Resources/migrations/{{ item.key|replace(".", "_") }}.yml'
  with_dict: '{{ cases_database_migration_data }}'
  when: cases_database_migration_data is not none
  no_log: yes

- name: Remove backup cases database migration file
  file:
      path: '/srv/cases/src/AppBundle/Resources/migrations/_{{ item.key|replace(".", "_") }}.yml'
      state: absent
  with_dict: '{{ cases_database_migration_data }}'
  when: cases_database_migration_data is not none
  no_log: yes
