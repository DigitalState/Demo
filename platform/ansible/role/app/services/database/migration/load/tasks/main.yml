---
- name: Backup services database migration file
  copy:
      src: '/srv/services/src/AppBundle/Resources/migrations/{{ item.key|replace(".", "_") }}.yml'
      remote_src: yes
      dest: '/srv/services/src/AppBundle/Resources/migrations/_{{ item.key|replace(".", "_") }}.yml'
  with_dict: '{{ services_database_migration_data }}'
  when: services_database_migration_data is not none
  no_log: yes

- name: Create custom services database migration file
  copy:
      dest: '/srv/services/src/AppBundle/Resources/migrations/{{ item.key|replace(".", "_") }}.yml'
      content: '{{ item.value|to_nice_yaml }}'
  with_dict: '{{ services_database_migration_data }}'
  when: services_database_migration_data is not none
  no_log: yes

- name: Load services database migration
  shell:
      cmd: 'docker-compose exec -T php php bin/console doctrine:migrations:migrate {{ "" if services_database_migration_version is none else services_database_migration_version|replace(".", "_") }} --no-interaction | cat'
      chdir: /srv/services

# The restore backup task below runs before docker-compose above finishes executing. Look into fixing this.
- name: Pause while services database migration loads
  pause:
      seconds: 15

- name: Delete custom services database migration file
  file:
      path: '/srv/services/src/AppBundle/Resources/migrations/{{ item.key|replace(".", "_") }}.yml'
      state: absent
  with_dict: '{{ services_database_migration_data }}'
  when: services_database_migration_data is not none
  no_log: yes

- name: Restore services database migration file
  copy:
      src: '/srv/services/src/AppBundle/Resources/migrations/_{{ item.key|replace(".", "_") }}.yml'
      remote_src: yes
      dest: '/srv/services/src/AppBundle/Resources/migrations/{{ item.key|replace(".", "_") }}.yml'
  with_dict: '{{ services_database_migration_data }}'
  when: services_database_migration_data is not none
  no_log: yes

- name: Remove backup services database migration file
  file:
      path: '/srv/services/src/AppBundle/Resources/migrations/_{{ item.key|replace(".", "_") }}.yml'
      state: absent
  with_dict: '{{ services_database_migration_data }}'
  when: services_database_migration_data is not none
  no_log: yes
